//using hashmap
class Solution
{
    public:
    //Function to remove duplicates from unsorted linked list.
    Node * removeDuplicates( Node *head) 
    {
     // your code goes here
     unordered_map<int,int> visited;
     Node* temp=head;
     Node* prev=temp;
     
     while(temp!=NULL){
         if(visited[temp->data]==true){
             prev->next=temp->next;
         }
         else{
             visited[temp->data]=true;
             prev=temp;
         }
         temp=temp->next;
     }
     return head;
    }
    
    //using set
    class Solution
{
    public:
    //Function to remove duplicates from unsorted linked list.
    Node * removeDuplicates( Node *head) 
    {
     // your code goes here
     unordered_set<int>s;
     Node* temp=head;
     Node* prev=temp;
     while(temp){
     if(s.find(temp->data)==s.end()){
         s.insert(temp->data);
         prev=temp;
         temp=temp->next;
     }
     else{
         prev->next=temp->next;
         temp=prev->next;
     }
     }
     return head;
    }
};
